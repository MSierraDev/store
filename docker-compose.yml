
# services:

  
#   nats-server:
#     image: nats:latest
#     ports:
#       - "8222:8222"
    

#   gateway:
#     build: ./gateway
#     ports:
#       - ${GATEWAY_PORT}:4000
#     volumes:
#       - ./gateway/src:/usr/src/app/src
#     command: npm run start:dev
#     environment:
#       - PORT=4000
#       - NATS_SERVERS=nats://nats-server:4222

#   products-db:
#     container_name: products_database
#     image: postgres:16.2
#     restart: always
#     volumes:
#       - ./products/postgres:/var/lib/postgresql/data
#     ports:
#       - ${POSTGRES_PORT}:5432
#     environment:
#       - POSTGRES_USER=${POSTGRES_USER}
#       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#       - POSTGRES_DB=${POSTGRES_DB}
#   products:
#     build: ./products
#     volumes:
#       - ./products/src:/usr/src/app/src
#     command: npm run start:dev
#     environment:
#       - PORT=4001
#       - NATS_SERVERS=nats://nats-server:4222
#       - DATABASE_URL=postgresql://postgres:123456@products-db:5432/products?schema=public

 
#   # Orders MS
#   orders:
#     build: ./orders
#     volumes:
#       - ./orders/src:/usr/src/app/src
#     command: npm run start:dev
#     environment:
#       - PORT=4002
#       - NATS_SERVERS=nats://nats-server:4222
#       - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@orders-db:5432/${POSTGRES_ORDERS_DB}?schema=public
#     depends_on:
#       - orders-db

#   # Orders DB
#   orders-db:
#     container_name: orders_database
#     image: postgres:16.2
#     restart: always
#     volumes:
#       - ./orders/postgres:/var/lib/postgresql/data
#     ports:
#       - ${POSTGRES_ORDERS_PORT}:5432
#     environment:
#       - POSTGRES_USER=${POSTGRES_USER}
#       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#       - POSTGRES_DB=${POSTGRES_ORDERS_DB}

#   auth-usersDb:
#     container_name: auth_users_database
#     image: postgres:16.2
#     restart: always
#     ports:
#       - 5434:5432
#     volumes:
#       - ./auth-users/postgres:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_USER=${POSTGRES_USER}
#       - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
#       - POSTGRES_DB=${POSTGRES_AUTH_USERS_DB}


#   auth-users:
#     build: ./auth-users
#     volumes:
#       - ./auth-users/src:/usr/src/app/src
#     command: npm run start:dev
#     depends_on:
#       - auth-usersDb
#     environment:
#       - PORT=4003
#       - NATS_SERVERS=nats://nats-server:4222
#       - JWT_SECRET=${JWT_SECRET}
#       - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@auth-usersDb:5432/${POSTGRES_AUTH_USERS_DB}?schema=public    

#   payments:
#     build: ./payments
#     volumes:
#       - ./payments/src:/usr/src/app/src
#     command: npm run start:dev
#     ports:
#       - 4004:4004
#     environment:
#       - PORT=4004
#       - NATS_SERVERS=nats://nats-server:4222
#       - MP_API_KEY=${MP_API_KEY}


services:
  nats-server:
    image: nats:latest
    container_name: nats-server
    ports:
      - "8222:8222"
      - "4222:4222"
    restart: unless-stopped

  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - ${GATEWAY_PORT}:4000
    volumes:
      - ./gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=4000
      - NATS_SERVERS=nats://nats-server:4222
    depends_on:
      - nats-server
    restart: unless-stopped

  # Products Database
  products-db:
    container_name: products_database
    image: postgres:16.2
    restart: unless-stopped
    volumes:
      - products_data:/var/lib/postgresql/data  
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Products Service
  products:
    build: ./products
    container_name: products-service
    volumes:
      - ./products/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=4001
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@products-db:5432/${POSTGRES_DB}?schema=public
    depends_on:
      products-db:
        condition: service_healthy
      nats-server:
        condition: service_started
    restart: unless-stopped

  # Orders Database
  orders-db:
    container_name: orders_database
    image: postgres:16.2
    restart: unless-stopped
    volumes:
      - orders_data:/var/lib/postgresql/data  
    ports:
      - ${POSTGRES_ORDERS_PORT}:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_ORDERS_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_ORDERS_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Orders Service
  orders:
    build: ./orders
    container_name: orders-service
    volumes:
      - ./orders/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=4002
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@orders-db:5432/${POSTGRES_ORDERS_DB}?schema=public
    depends_on:
      orders-db:
        condition: service_healthy
      nats-server:
        condition: service_started
    restart: unless-stopped

  # Auth Users Database
  auth-usersDb:
    container_name: auth_users_database
    image: postgres:16.2
    restart: unless-stopped
    ports:
      - 5434:5432
    volumes:
      - auth_users_data:/var/lib/postgresql/data  
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_AUTH_USERS_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_AUTH_USERS_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Auth Users Service
  auth-users:
    build: ./auth-users
    container_name: auth-users-service
    volumes:
      - ./auth-users/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=4003
      - NATS_SERVERS=nats://nats-server:4222
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@auth-usersDb:5432/${POSTGRES_AUTH_USERS_DB}?schema=public
    depends_on:
      auth-usersDb:
        condition: service_healthy
      nats-server:
        condition: service_started
    restart: unless-stopped

  # Payments Service
  payments:
    build: ./payments
    container_name: payments-service
    volumes:
      - ./payments/src:/usr/src/app/src
    command: npm run start:dev
    ports:
      - 4004:4004
    environment:
      - PORT=4004
      - NATS_SERVERS=nats://nats-server:4222
      - MP_API_KEY=${MP_API_KEY}
    depends_on:
      - nats-server
    restart: unless-stopped

  #NOTIFICATIONS SERVICE
  notifications:
    build: ./notifications
    container_name: notifications-service
    volumes:
      - ./notifications/src:/usr/src/app/src
    command: npm run start:dev
    ports:
      - 4005:4005
    environment:
      - PORT=4005
      - NATS_SERVERS=nats://nats-server:4222
      - RESEND_API_KEY=${RESEND_API_KEY}
    depends_on:
      - nats-server
    restart: unless-stopped


volumes:
  products_data:
    driver: local
  orders_data:
    driver: local
  auth_users_data:
    driver: local